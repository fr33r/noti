{
	"info": {
		"_postman_id": "53061c15-9931-467c-a18c-8ea81db59cd6",
		"name": "NOTI Tests",
		"description": "Contains a series of tests to execute against NOTI.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "application/json",
			"item": [
				{
					"name": "/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd197e6c-57f9-4371-8cf9-ea7fa3f53c86",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								""
							]
						},
						"description": "Retrieves the `root` (`billboard`/`noti`) resource."
					},
					"response": []
				},
				{
					"name": "/audiences/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d272cca-8a62-41e7-b079-7d9d19141de2",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"Location header is present\", function () {",
									"    pm.response.to.have.header(\"Location\");",
									"});",
									"",
									"//set globals.",
									"var location = postman.getResponseHeader(\"Location\");",
									"pm.globals.set(\"audience_location\", location);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Audience\",\n\t\"members\" : []\n}"
						},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/audiences/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"audiences",
								""
							]
						},
						"description": "Creates a new audience and appends it to the audience collection."
					},
					"response": []
				},
				{
					"name": "/audiences/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ae78646-1b11-4fa9-868d-94f9c6994909",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"ETag header is present\", function () {",
									"    pm.response.to.have.header(\"ETag\");",
									"});",
									"",
									"pm.test(\"Last-Modified header is present\", function () {",
									"    pm.response.to.have.header(\"Last-Modified\");",
									"});",
									"",
									"pm.test(\"Date header is present\", function () {",
									"    pm.response.to.have.header(\"Date\");",
									"});",
									"",
									"pm.test(\"Vary header is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"",
									"//set globals.",
									"pm.globals.set(\"audience_representation\", pm.response.text());"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{audience_location}}",
							"host": [
								"{{audience_location}}"
							]
						},
						"description": "Retrieves the audience with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/audiences/{uuid}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ef672726-4647-499c-8018-023ea8aee18e",
								"type": "text/javascript",
								"exec": [
									"var json_text = pm.globals.get(\"audience_representation\");",
									"console.log(json_text);",
									"var json_data = JSON.parse(json_text);",
									"",
									"json_data.name = \"Updated Test Audience\";",
									"pm.globals.set(\"audience_representation\", JSON.stringify(json_data))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "524c4098-71ad-4dc7-ab4a-a184b192d9d7",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"audience_representation\");"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{audience_representation}}"
						},
						"url": {
							"raw": "{{audience_location}}",
							"host": [
								"{{audience_location}}"
							]
						},
						"description": "Replaces the current state of the audience with the `UUID` provided with the state provided."
					},
					"response": []
				},
				{
					"name": "/targets/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d10ab980-bb21-481a-a10b-a5d989a44839",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"Location header is present\", function () {",
									"    pm.response.to.have.header(\"Location\");",
									"});",
									"",
									"//set globals.",
									"var location = postman.getResponseHeader(\"Location\");",
									"pm.globals.set(\"target_location\", location);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Jonny Freer\",\n    \"phoneNumber\": \"+16146573542\"\n}"
						},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/targets/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"targets",
								""
							]
						},
						"description": "Creates a new target and appends it to the target collection."
					},
					"response": []
				},
				{
					"name": "/targets/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "283625a7-bfb0-4a41-ac73-0cc005f880c5",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"ETag header is present\", function () {",
									"    pm.response.to.have.header(\"ETag\");",
									"});",
									"",
									"pm.test(\"Last-Modified header is present\", function () {",
									"    pm.response.to.have.header(\"Last-Modified\");",
									"});",
									"",
									"pm.test(\"Date header is present\", function () {",
									"    pm.response.to.have.header(\"Date\");",
									"});",
									"",
									"pm.test(\"Vary header is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"",
									"//set globals.",
									"pm.globals.set(\"target_representation\", pm.response.text());",
									"var target = JSON.parse(pm.response.text());",
									"pm.globals.set(\"target_uuid\", \"\\\"\" + target.uuid + \"\\\"\");",
									"pm.globals.set(\"target_name\", \"\\\"\" + target.name + \"\\\"\");",
									"pm.globals.set(\"target_phone_number\", \"\\\"\" + target.phoneNumber + \"\\\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{target_location}}",
							"host": [
								"{{target_location}}"
							]
						},
						"description": "Retrieves the target with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/targets/{uuid}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "83172d7c-8469-428c-a234-996a22aaa8a4",
								"exec": [
									"var json_text = pm.globals.get(\"target_representation\");",
									"var json_data = JSON.parse(json_text);",
									"",
									"json_data.name = \"Updated Test Target\";",
									"pm.globals.set(\"target_representation\", JSON.stringify(json_data))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0534524e-b626-42ec-928b-9c21ad13cda8",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"target_representation\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{target_representation}}"
						},
						"url": {
							"raw": "{{target_location}}",
							"host": [
								"{{target_location}}"
							]
						},
						"description": "Replaces the state of the target with the `UUID` provided with the state provided."
					},
					"response": []
				},
				{
					"name": "/notifications/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84ffc0c7-b27b-46c8-9fe0-3e42ed865ed0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/notifications/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"notifications",
								""
							]
						},
						"description": "Retrieves a representation of the notification collection resource."
					},
					"response": []
				},
				{
					"name": "/notifications/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da2307a1-3856-4ea1-be7c-3ac17bd43df3",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"Location header is present\", function () {",
									"    pm.response.to.have.header(\"Location\");",
									"});",
									"",
									"//set globals.",
									"var location = postman.getResponseHeader(\"Location\");",
									"pm.globals.set(\"notification_location\", location);",
									"",
									"//clear globals.",
									"pm.globals.unset(\"target_uuid\");",
									"pm.globals.unset(\"target_name\");",
									"pm.globals.unset(\"target_phone_number\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"TESTING! 🤖\",\n  \"status\": \"PENDING\",\n  \"targets\": [\n    {\n      \"uuid\": {{target_uuid}},\n      \"name\": {{target_name}},\n      \"phoneNumber\": {{target_phone_number}}\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/notifications/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"notifications",
								""
							]
						},
						"description": "Creates a new notification resource based on the representation provided."
					},
					"response": []
				},
				{
					"name": "/notifications/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56b65784-679d-492e-972b-004559eda549",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"ETag header is present\", function () {",
									"    pm.response.to.have.header(\"ETag\");",
									"});",
									"",
									"pm.test(\"Last-Modified header is present\", function () {",
									"    pm.response.to.have.header(\"Last-Modified\");",
									"});",
									"",
									"pm.test(\"Date header is present\", function () {",
									"    pm.response.to.have.header(\"Date\");",
									"});",
									"",
									"pm.test(\"Vary header is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"",
									"//set globals.",
									"pm.globals.set(\"notification_representation\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{notification_location}}",
							"host": [
								"{{notification_location}}"
							]
						},
						"description": "Retrieves the notification resource representation with the UUID provided."
					},
					"response": []
				},
				{
					"name": "/notifications/{uuid}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "83172d7c-8469-428c-a234-996a22aaa8a4",
								"exec": [
									"var json_text = pm.globals.get(\"notification_representation\");",
									"var json_data = JSON.parse(json_text);",
									"",
									"json_data.content = \"Updated Content!\";",
									"pm.globals.set(\"notification_representation\", JSON.stringify(json_data))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0534524e-b626-42ec-928b-9c21ad13cda8",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"notification_representation\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{notification_representation}}"
						},
						"url": {
							"raw": "{{notification_location}}",
							"host": [
								"{{notification_location}}"
							]
						},
						"description": "Replaces the state of the notification with the `UUID` provided with the state provided."
					},
					"response": []
				},
				{
					"name": "/audiences/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b8a8059-fb80-4a29-8223-5ccfe66ca6d5",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"audience_location\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{audience_location}}",
							"host": [
								"{{audience_location}}"
							]
						},
						"description": "Removes the audience with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/targets/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9dc486c-d6de-4cc1-8ab3-969cedd4e9b6",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"target_location\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{target_location}}",
							"host": [
								"{{target_location}}"
							]
						},
						"description": "Removes the target with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/notifications/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "207d1099-7613-4140-b876-1a4bb795955d",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"notification_location\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{notification_location}}",
							"host": [
								"{{notification_location}}"
							]
						},
						"description": "Removes the notification resource with the UUID provided."
					},
					"response": []
				}
			],
			"description": "Performs protocol-related tests and verifications for `application/json` representations utilizing proactive negotiation."
		},
		{
			"name": "application/vnd.siren+json",
			"item": [
				{
					"name": "/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1ad5122-dbe8-4a70-a12b-7c265e3eb4a0",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//set globals.",
									"var json_data = JSON.parse(pm.response.text());",
									"var audiences_collection;",
									"var notifications_collection;",
									"var targets_collection;",
									"for(i = 0; i < json_data.entities.length; i++) {",
									"    entity = json_data.entities[i];",
									"    if (entity.class.includes(\"notification\")) {",
									"        notifications_collection = entity;",
									"    } else if (entity.class.includes(\"target\")) {",
									"        targets_collection = entity;",
									"    } else if (entity.class.includes(\"audience\")) {",
									"        audiences_collection = entity;",
									"    }",
									"}",
									"",
									"var audiences_location = audiences_collection.href;",
									"var notifications_location = notifications_collection.href;",
									"var targets_location = targets_collection.href;",
									"",
									"console.log(audiences_location);",
									"console.log(notifications_location);",
									"console.log(targets_location);",
									"",
									"pm.globals.set(\"audiences_location\", audiences_location);",
									"pm.globals.set(\"notifications_location\", notifications_location);",
									"pm.globals.set(\"targets_location\", targets_location);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.siren+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								""
							]
						},
						"description": "Retrieves the `root` (`billboard`/`noti`) resource."
					},
					"response": []
				},
				{
					"name": "/notifications/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07274766-2d6e-47ec-bbec-9bff36597fba",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"notifications_location\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.siren+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{notifications_location}}",
							"host": [
								"{{notifications_location}}"
							]
						},
						"description": "Retrieves a representation of the notification collection resource."
					},
					"response": []
				},
				{
					"name": "/audiences/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ad43bb3-0d07-4a40-899c-fbd463429817",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"Location header is present\", function () {",
									"    pm.response.to.have.header(\"Location\");",
									"});",
									"",
									"//set globals.",
									"var location = postman.getResponseHeader(\"Location\");",
									"pm.globals.set(\"audience_location\", location);",
									"",
									"//clear globals.",
									"pm.globals.unset(\"audiences_location\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.siren+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Audience\",\n\t\"members\" : []\n}"
						},
						"url": {
							"raw": "{{audiences_location}}",
							"host": [
								"{{audiences_location}}"
							]
						},
						"description": "Creates a new audience and appends it to the audience collection."
					},
					"response": []
				},
				{
					"name": "/audiences/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ae78646-1b11-4fa9-868d-94f9c6994909",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"ETag header is present\", function () {",
									"    pm.response.to.have.header(\"ETag\");",
									"});",
									"",
									"pm.test(\"Last-Modified header is present\", function () {",
									"    pm.response.to.have.header(\"Last-Modified\");",
									"});",
									"",
									"pm.test(\"Date header is present\", function () {",
									"    pm.response.to.have.header(\"Date\");",
									"});",
									"",
									"pm.test(\"Vary header is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"",
									"//set globals.",
									"pm.globals.set(\"audience_representation\", pm.response.text());"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.siren+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{audience_location}}",
							"host": [
								"{{audience_location}}"
							]
						},
						"description": "Retrieves the audience with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/audiences/{uuid}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "93124949-5f21-4e10-b45b-4fcac23331d5",
								"type": "text/javascript",
								"exec": [
									"var json_text = pm.globals.get(\"audience_representation\");",
									"console.log(json_text);",
									"var json_data = JSON.parse(json_text);",
									"var properties = json_data.properties;",
									"properties.name = \"Updated Test Audience\";",
									"pm.globals.set(\"audience_representation\", JSON.stringify(properties))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "524c4098-71ad-4dc7-ab4a-a184b192d9d7",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"audience_representation\");"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.siren+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{audience_representation}}"
						},
						"url": {
							"raw": "{{audience_location}}",
							"host": [
								"{{audience_location}}"
							]
						},
						"description": "Replaces the current state of the audience with the `UUID` provided with the state provided."
					},
					"response": []
				},
				{
					"name": "/targets/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09510f6d-1c18-4fd8-a941-9eb97de1909b",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"Location header is present\", function () {",
									"    pm.response.to.have.header(\"Location\");",
									"});",
									"",
									"//set globals.",
									"var location = postman.getResponseHeader(\"Location\");",
									"pm.globals.set(\"target_location\", location);",
									"",
									"//clear globals.",
									"pm.globals.unset(\"targets_location\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.siren+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Jonny Freer\",\n    \"phoneNumber\": \"+16146573542\"\n}"
						},
						"url": {
							"raw": "{{targets_location}}",
							"host": [
								"{{targets_location}}"
							]
						},
						"description": "Creates a new target and appends it to the target collection."
					},
					"response": []
				},
				{
					"name": "/targets/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "283625a7-bfb0-4a41-ac73-0cc005f880c5",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"ETag header is present\", function () {",
									"    pm.response.to.have.header(\"ETag\");",
									"});",
									"",
									"pm.test(\"Last-Modified header is present\", function () {",
									"    pm.response.to.have.header(\"Last-Modified\");",
									"});",
									"",
									"pm.test(\"Date header is present\", function () {",
									"    pm.response.to.have.header(\"Date\");",
									"});",
									"",
									"pm.test(\"Vary header is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"",
									"//set globals.",
									"pm.globals.set(\"target_representation\", pm.response.text());"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.siren+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{target_location}}",
							"host": [
								"{{target_location}}"
							]
						},
						"description": "Retrieves the target with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/targets/{uuid}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9866b6b3-0478-49c5-8a56-a49b2275e1b6",
								"type": "text/javascript",
								"exec": [
									"var json_text = pm.globals.get(\"target_representation\");",
									"var json_data = JSON.parse(json_text);",
									"var properties = json_data.properties;",
									"",
									"properties.name = \"Updated Test Target\";",
									"pm.globals.set(\"target_representation\", JSON.stringify(properties))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0534524e-b626-42ec-928b-9c21ad13cda8",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"target_representation\");"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.siren+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{target_representation}}"
						},
						"url": {
							"raw": "{{target_location}}",
							"host": [
								"{{target_location}}"
							]
						},
						"description": "Replaces the state of the target with the `UUID` provided with the state provided."
					},
					"response": []
				},
				{
					"name": "/audiences/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b8a8059-fb80-4a29-8223-5ccfe66ca6d5",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"audience_location\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.siren+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{audience_location}}",
							"host": [
								"{{audience_location}}"
							]
						},
						"description": "Removes the audience with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/targets/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9dc486c-d6de-4cc1-8ab3-969cedd4e9b6",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"target_location\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.siren+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{target_location}}",
							"host": [
								"{{target_location}}"
							]
						},
						"description": "Removes the target with the `UUID` provided."
					},
					"response": []
				}
			],
			"description": "Performs protocol-related tests and verifications for `application/vnd.siren+json` representations utilizing proactive negotiation.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "28c481b3-c51d-4428-b60e-c8d55485ef27",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7e12288d-5245-48f4-9bad-e029675b8916",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "application/xml",
			"item": [
				{
					"name": "/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "511f3beb-7ba5-4638-b9ed-53ece965142a",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								""
							]
						},
						"description": "Retrieves the `root` (`billboard`/`noti`) resource."
					},
					"response": []
				},
				{
					"name": "/audiences/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d272cca-8a62-41e7-b079-7d9d19141de2",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"Location header is present\", function () {",
									"    pm.response.to.have.header(\"Location\");",
									"});",
									"",
									"//set globals.",
									"var location = postman.getResponseHeader(\"Location\");",
									"pm.globals.set(\"audience_location\", location);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<audience>\n\t<name>Test Audience</name>\n</audience>"
						},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/audiences/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"audiences",
								""
							]
						},
						"description": "Creates a new audience and appends it to the audience collection."
					},
					"response": []
				},
				{
					"name": "/audiences/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ae78646-1b11-4fa9-868d-94f9c6994909",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"ETag header is present\", function () {",
									"    pm.response.to.have.header(\"ETag\");",
									"});",
									"",
									"pm.test(\"Last-Modified header is present\", function () {",
									"    pm.response.to.have.header(\"Last-Modified\");",
									"});",
									"",
									"pm.test(\"Date header is present\", function () {",
									"    pm.response.to.have.header(\"Date\");",
									"});",
									"",
									"pm.test(\"Vary header is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"",
									"//set globals.",
									"pm.globals.set(\"audience_representation\", pm.response.text());"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {},
						"url": {
							"raw": "{{audience_location}}",
							"host": [
								"{{audience_location}}"
							]
						},
						"description": "Retrieves the audience with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/audiences/{uuid}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d03d07bb-f468-4d17-9d93-f54f3d7ff5bf",
								"type": "text/javascript",
								"exec": [
									"var xml_text = pm.globals.get(\"audience_representation\");",
									"console.log(xml_text);",
									"",
									"name_regex = /<name>*<\\/name>/;",
									"xml_text = xml_text.replace(",
									"    name_regex,",
									"    \"<name>Updated Test Audience</name>\"",
									");",
									"console.log(xml_text);",
									"",
									"pm.globals.set(\"audience_representation\", xml_text);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "524c4098-71ad-4dc7-ab4a-a184b192d9d7",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"audience_representation\");"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{audience_representation}}"
						},
						"url": {
							"raw": "{{audience_location}}",
							"host": [
								"{{audience_location}}"
							]
						},
						"description": "Replaces the current state of the audience with the `UUID` provided with the state provided."
					},
					"response": []
				},
				{
					"name": "/targets/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d10ab980-bb21-481a-a10b-a5d989a44839",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"Location header is present\", function () {",
									"    pm.response.to.have.header(\"Location\");",
									"});",
									"",
									"//set globals.",
									"var location = postman.getResponseHeader(\"Location\");",
									"pm.globals.set(\"target_location\", location);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<target>\n\t<name>Jonny Freer</name>\n\t<phoneNumber>+16146573542</phoneNumber>\n</target>"
						},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/targets/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"targets",
								""
							]
						},
						"description": "Creates a new target and appends it to the target collection."
					},
					"response": []
				},
				{
					"name": "/targets/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "283625a7-bfb0-4a41-ac73-0cc005f880c5",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"ETag header is present\", function () {",
									"    pm.response.to.have.header(\"ETag\");",
									"});",
									"",
									"pm.test(\"Last-Modified header is present\", function () {",
									"    pm.response.to.have.header(\"Last-Modified\");",
									"});",
									"",
									"pm.test(\"Date header is present\", function () {",
									"    pm.response.to.have.header(\"Date\");",
									"});",
									"",
									"pm.test(\"Vary header is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"",
									"//set globals.",
									"var name_regex = /<name>.*<\\/name>/;",
									"var uuid_regex = /<UUID>.*<\\/UUID>/;",
									"var phone_number_regex = /<phoneNumber>.*<\\/phoneNumber>/;",
									"var name_match = name_regex.exec(pm.response.text())[0];",
									"var uuid_match = uuid_regex.exec(pm.response.text())[0];",
									"var phone_number_match = phone_number_regex.exec(pm.response.text())[0];",
									"console.log(\"name = \", name_match);",
									"console.log(\"uuid = \", uuid_match);",
									"console.log(\"phoneNumber = \", phone_number_match);",
									"var name = name_match.replace(\"<name>\", \"\").replace(\"<\\/name>\", \"\");",
									"var uuid = uuid_match.replace(\"<UUID>\", \"\").replace(\"<\\/UUID>\", \"\");",
									"var phone_number = phone_number_match.replace(\"<phoneNumber>\", \"\").replace(\"<\\/phoneNumber>\", \"\");",
									"pm.globals.set(\"target_representation\", pm.response.text());",
									"pm.globals.set(\"target_uuid\", uuid);",
									"pm.globals.set(\"target_name\", name);",
									"pm.globals.set(\"target_phone_number\", phone_number);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {},
						"url": {
							"raw": "{{target_location}}",
							"host": [
								"{{target_location}}"
							]
						},
						"description": "Retrieves the target with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/targets/{uuid}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9b71a0ee-4707-4708-ab9b-8b46216c3cdd",
								"exec": [
									"var xml_text = pm.globals.get(\"target_representation\");",
									"console.log(xml_text);",
									"",
									"var name_regex = /<name>*<\\/name>/;",
									"xml_text = xml_text.replace(",
									"    name_regex,",
									"    \"<name>Updated Test Target</name>\"",
									");",
									"console.log(xml_text);",
									"",
									"pm.globals.set(\"target_representation\", xml_text);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0534524e-b626-42ec-928b-9c21ad13cda8",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"target_representation\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{target_representation}}"
						},
						"url": {
							"raw": "{{target_location}}",
							"host": [
								"{{target_location}}"
							]
						},
						"description": "Replaces the state of the target with the `UUID` provided with the state provided."
					},
					"response": []
				},
				{
					"name": "/notifications/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84ffc0c7-b27b-46c8-9fe0-3e42ed865ed0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/notifications/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"notifications",
								""
							]
						},
						"description": "Retrieves a representation of the notification collection resource."
					},
					"response": []
				},
				{
					"name": "/notifications/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da2307a1-3856-4ea1-be7c-3ac17bd43df3",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"Location header is present\", function () {",
									"    pm.response.to.have.header(\"Location\");",
									"});",
									"",
									"//set globals.",
									"var location = postman.getResponseHeader(\"Location\");",
									"pm.globals.set(\"notification_location\", location);",
									"",
									"//clear globals.",
									"pm.globals.unset(\"target_uuid\");",
									"pm.globals.unset(\"target_name\");",
									"pm.globals.unset(\"target_phone_number\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<notification>\n\t<content>TESTING! 🤖</content>\n\t<status>PENDING</status>\n\t<targets>\n\t\t<target>\n\t\t\t<UUID>{{target_uuid}}</UUID>\n\t\t\t<name>{{target_name}}</name>\n\t\t\t<phoneNumber>{{target_phone_number}}</phoneNumber>\n\t\t</target>\n\t</targets>\n</notification>"
						},
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}/notifications/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"notifications",
								""
							]
						},
						"description": "Creates a new notification resource based on the representation provided."
					},
					"response": []
				},
				{
					"name": "/notifications/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56b65784-679d-492e-972b-004559eda549",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Length header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Length\");",
									"});",
									"",
									"pm.test(\"ETag header is present\", function () {",
									"    pm.response.to.have.header(\"ETag\");",
									"});",
									"",
									"pm.test(\"Last-Modified header is present\", function () {",
									"    pm.response.to.have.header(\"Last-Modified\");",
									"});",
									"",
									"pm.test(\"Date header is present\", function () {",
									"    pm.response.to.have.header(\"Date\");",
									"});",
									"",
									"pm.test(\"Vary header is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"",
									"//set globals.",
									"pm.globals.set(\"notification_representation\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{notification_location}}",
							"host": [
								"{{notification_location}}"
							]
						},
						"description": "Retrieves the notification resource representation with the UUID provided."
					},
					"response": []
				},
				{
					"name": "/notifications/{uuid}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "83172d7c-8469-428c-a234-996a22aaa8a4",
								"exec": [
									"var xml_text = pm.globals.get(\"notification_representation\");",
									"console.log(xml_text);",
									"",
									"name_regex = /<content>*<\\/content>/;",
									"xml_text = xml_text.replace(",
									"    name_regex,",
									"    \"<content>Updated Content!</content>\"",
									");",
									"console.log(xml_text);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0534524e-b626-42ec-928b-9c21ad13cda8",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"notification_representation\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{notification_representation}}"
						},
						"url": {
							"raw": "{{notification_location}}",
							"host": [
								"{{notification_location}}"
							]
						},
						"description": "Replaces the state of the notification with the `UUID` provided with the state provided."
					},
					"response": []
				},
				{
					"name": "/audiences/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b8a8059-fb80-4a29-8223-5ccfe66ca6d5",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"audience_location\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {},
						"url": {
							"raw": "{{audience_location}}",
							"host": [
								"{{audience_location}}"
							]
						},
						"description": "Removes the audience with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/targets/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9dc486c-d6de-4cc1-8ab3-969cedd4e9b6",
								"type": "text/javascript",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"target_location\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {},
						"url": {
							"raw": "{{target_location}}",
							"host": [
								"{{target_location}}"
							]
						},
						"description": "Removes the target with the `UUID` provided."
					},
					"response": []
				},
				{
					"name": "/notifications/{uuid}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "207d1099-7613-4140-b876-1a4bb795955d",
								"exec": [
									"//tests.",
									"pm.test(\"Status code = 204 No Content\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"//clear globals.",
									"pm.globals.unset(\"notification_location\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{notification_location}}",
							"host": [
								"{{notification_location}}"
							]
						},
						"description": "Removes the notification resource with the UUID provided."
					},
					"response": []
				}
			],
			"description": "Performs protocol-related tests and verifications for `application/json` representations utilizing proactive negotiation."
		}
	]
}